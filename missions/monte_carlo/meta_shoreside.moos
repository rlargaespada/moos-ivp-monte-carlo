//*******************************************************
// definitions
#define OBS_REFRESH_INTERVAL 100
#define OBS_MIN_DURATION 120
#define OBS_MAX_DURATION 180

//*******************************************************
// ShoreSide Configuration File

ServerHost = $(IP_ADDR)
ServerPort = $(SHORE_MOOSDB)
Community  = shoreside

#include plug_origin_warp.moos

//--------------------------------------------------------
Processconfig = ANTLER
{
  MSBetweenLaunches = 100

  Run = MOOSDB                @ NewConsole = false
  Run = pRealm                @ NewConsole = false
#ifdef GUI true
  Run = pMarineViewer         @ NewConsole = false
#endif

  Run = pLogger            @ NewConsole = false
  // Run = uXMS               @ NewConsole = false
  // Run = pDeadManPost       @ NewConsole = false

  Run = pShare                @ NewConsole = false
  Run = pHostInfo             @ NewConsole = false
  Run = uFldShoreBroker       @ NewConsole = false

  Run = uFldObsMonteCarloSim  @ NewConsole = false ~ uFldObsMonteCarloSim_CONSTANT
  Run = uFldObsMonteCarloSim  @ NewConsole = false ~ uFldObsMonteCarloSim_KNOWN
  Run = uFldObsMonteCarloSim  @ NewConsole = false ~ uFldObsMonteCarloSim_UNKNOWN

  Run = uFldCollObDetect      @ NewConsole = false
  Run = uFldPathCheck         @ NewConsole = false

  Run = uEvalPlanner          @ NewConsole = false
}


//------------------------------------------
// pMarineViewer config block

ProcessConfig = pMarineViewer
{
  AppTick = 4
  CommsTick = 4

  // BackView Options
  // tiff_file            = MIT_SP.tif
  tiff_file            = forrest19.tif
  set_pan_x            = -90
  set_pan_y            = -280
  zoom                 = 0.65
  vehicle_shape_scale  = 1.5

  // BackView Pull-Down Menu
  hash_delta           = 50
  hash_shade           = 0.22
  hash_viewable        = true

  // GeoAttributes Pull-Down Menu
  // use all defaults

  // Vehicles Pull-Down Menu
  // use all defaults

  // InfoCasting Pull-Down Menu
  appcast_height       = 75
  appcast_width        = 30
  appcast_viewable     = true
  appcast_color_scheme = indigo
  nodes_font_size      = xlarge
  procs_font_size      = xlarge
  appcast_font_size    = large

  // Context Pull-Down Menu
  // todo: multiple vehicles
  left_context = START_POS = "x=$[XPOS], y=$[YPOS]"
  right_context = GOAL_POS = "x=$[XPOS], y=$[YPOS]"

  // Exclusion Filter
  // leave empty

  // MOOS-Scope Pull-Down Menu
  // todo: choose which variables to scope on
  scope = PHI_HOST_INFO
  scope = MVIEWER_LCLICK
  scope = MVIEWER_RCLICK

  // Action Pull-Down Menu
  // todo: determine what actions might be useful

  // Button Configuration
  button_one = LAUNCH_SIM # DEPLOY_ALL=true # MOOS_MANUAL_OVERRIDE_ALL=false
  button_one = RESET_SIM_REQUESTED=true
  button_two = END_SIM # DEPLOY_ALL=false # END_SIM_REQUESTED=true

  button_three = PAUSE_SIM # USM_SIM_PAUSED_ALL=true
  button_four = UNPAUSE_SIM # USM_SIM_PAUSED_ALL=false

  button_five = RESET_TRIAL # RESET_TRIAL_REQUESTED=true
  button_six = RESET_SIM # RESET_SIM_REQUESTED=true
  button_seven = SKIP_TRIAL # SKIP_TRIAL_REQUESTED=true
}


//------------------------------------------
// pLogger config block

ProcessConfig = pLogger
{
  AppTick       = 5
  CommsTick     = 5

  SyncLog       = true @ 0.2
  AsyncLog      = true
  WildCardLogging = false

  // File = MOOSLog_FORESTLAKE_BASIC_MONTECARLO
  File = MOOSLog_SHORESIDE
  FileTimeStamp = false  // false while developing

  Log = DEPLOY_ALL @ 0 NOSYNC

  // obstacle sim
  Log = KNOWN_OBSTACLE @ 0 NOSYNC
  Log = RESET_KNOWN_OBSTACLES @ 0 NOSYNC
  Log = RESET_UNKNOWN_OBSTACLES @ 0 NOSYNC
  Log = NEW_OBSTSACLE_FILE_KNOWN @ 0 NOSYNC
  Log = NEW_OBSTSACLE_FILE_UNKNOWN @ 0 NOSYNC
  Log = KNOWN_OBSTACLE_CLEAR @ 0 NOSYNC
  Log = VIEW_POLYGON @ 0 NOSYNC
  Log = VIEW_POINT @ 0 NOSYNC

  // collision detect
  Log = OB_ENCOUNTER @ 0 NOSYNC
  Log = OB_NEAR_MISS @ 0 NOSYNC
  Log = OB_COLLISION @ 0 NOSYNC
  Log = COLLISION_COUNT @ 0
  Log = NEAR_MISS_COUNT @ 0
  Log = ENCOUNTER_COUNT @ 0

  //  path check
  Log = UPC_TRIP_RESET @ 0 NOSYNC
  Log = UPC_SPEED_REPORT @ 0 NOSYNC
  Log = UPC_ODOMETRY_REPORT @ 0 NOSYNC

  // eval planner
  Log = RESET_SIM_REQUESTED @ 0 NOSYNC
  Log = END_SIM_REQUESTED @ 0 NOSYNC
  Log = RESET_TRIAL_REQUESTED @ 0 NOSYNC
  Log = SKIP_TRIAL_REQUESTED @ 0 NOSYNC
  Log = START_POS @ 0 NOSYNC
  Log = GOAL_POS @ 0 NOSYNC
  Log = $(PATH_REQUEST_VAR) @ 0 NOSYNC
  Log = $(PATH_COMPLETE_VAR) @ 0 NOSYNC
  Log = USM_RESET @ 0 NOSYNC
  Log = TRIAL_COMPLETE @ 0
  // todo: add metrics postings
  Log = VIEW_MARKER @ 0 NOSYNC
}

// todo: determine which variables to scope for uXMS
// todo: determine which variables to monitor for pDeadManPost


#include plug_pShare.moos
#include plug_pHostInfo.moos
//------------------------------------------
// uFldShoreBroker config block

ProcessConfig = uFldShoreBroker
{
  AppTick       = 4
  CommsTick     = 4

  // Note: [QBRIDGE = FOO]  is shorthand for
  //       [BRIDGE = src=FOO_$V,  alias=FOO] and
  //       [BRIDGE = src=FOO_ALL, alias=FOO]

  qbridge = DEPLOY
  qbridge = MOOS_MANUAL_OVERRIDE, APPCAST_REQ
  qbridge = USM_SIM_PAUSED
  qbridge = TRACKED_FEATURE

  bridge = src=USM_RESET
  bridge = src=$(PATH_REQUEST_VAR)
  bridge = src=GIVEN_OBSTACLE
  //todo: work with multiple vehicles
  //todo: determine if any more variables need to be shared
}


ProcessConfig = uFldObsMonteCarloSim_CONSTANT
{
  AppTick       = 1
  CommsTick     = 1

  obstacle_file = $(OBS_CONST_FILE)
  post_visuals = $(GUI)

  // parameters to draw constant obstacles
  poly_vert_color = sandybrown
  poly_edge_color = sandybrown
  poly_fill_color = chocolate
  poly_label_color = white

  poly_vert_size = 1
  poly_edge_size = 1
  poly_transparency = 0.15

  // obstacle region is whole map, so no need to draw
  draw_region = false

  // vehicle knows about constant obstacles, so post polygons
  post_points = false

  // obstacle repost configuration
  min_duration = $(OBS_MIN_DURATION)
  max_duration = $(OBS_MAX_DURATION)
  refresh_interval = $(OBS_REFRESH_INTERVAL)

  // obstacle reset configuration
  // for constant obstacles, don't want obstacles to reset
  reset_requests_enabled = false  // disable reset requests
  // reset_interval = -1  // disable timed resets
  // obstacle region is entire map
  // vehicles will never exit obstacle region, so obstacles
  // will never reset
  // reset_range = 1000  // add a buffer to map limits for safety
}


ProcessConfig = uFldObsMonteCarloSim_KNOWN
{
  AppTick       = 1
  CommsTick     = 1

  obstacle_file = $(OBS_KNOWN_FILE)
  post_visuals = $(GUI)
  label_prefix = known
  obstacle_file_var = NEW_OBSTSACLE_FILE_KNOWN

  // parameters to draw known obstacles
  poly_vert_color = royalblue
  poly_edge_color = royalblue
  poly_fill_color = cornflowerblue
  // poly_label_color = invisible
  poly_label_color = white

  poly_vert_size = 1
  poly_edge_size = 1
  poly_transparency = 0.15

  // parameters to draw obstacle region
  draw_region = true
  region_vert_color = hotpink
  region_edge_color = hotpink

  // vehicle knows about known obstacles, so post polygons
  post_points = false

  // obstacle repost configuration
  min_duration = $(OBS_MIN_DURATION)
  max_duration = $(OBS_MAX_DURATION)
  refresh_interval = $(OBS_REFRESH_INTERVAL)

  // obstacle reset configuration
  // reset_interval = -1  // disable timed resets
  reset_var = RESET_KNOWN_OBSTACLES
  reset_range = 10
  reuse_ids = true
}


ProcessConfig = uFldObsMonteCarloSim_UNKNOWN
{
  AppTick       = 1
  CommsTick     = 1

  obstacle_file = $(OBS_UNKNOWN_FILE)
  post_visuals = $(GUI)
  label_prefix = unknown
  obstacle_file_var = NEW_OBSTSACLE_FILE_UNKNOWN

  // parameters to draw known obstacles
  poly_vert_color = orangered
  poly_edge_color = orangered
  poly_fill_color = coral
  // poly_label_color = invisible
  poly_label_color = white

  poly_vert_size = 1
  poly_edge_size = 1
  poly_transparency = 0.15

  // parameters to draw obstacle region
  draw_region = false
  region_vert_color = hotpink
  region_edge_color = hotpink

  // vehicle doesn't know about unknown obstacles, so post points
  post_points = true
  rate_points = 5
  point_size = 5

  // obstacle repost configuration
  min_duration = $(OBS_MIN_DURATION)
  max_duration = $(OBS_MAX_DURATION)
  refresh_interval = $(OBS_REFRESH_INTERVAL)

  // obstacle reset configuration
  // reset_interval = -1  // disable timed resets
  reset_var = RESET_UNKNOWN_OBSTACLES
  reset_range = 10
  reuse_ids = true

  sensor_range = 50
}


//------------------------------------------
// uFldCollObDetect config block
ProcessConfig = uFldCollObDetect
{
  AppTick   = 4
  CommsTick = 4

  collision_dist   = 5
  near_miss_dist   = 10
  encounter_dist   = 20

  // post encounter info
  collision_flag   = OB_ENCOUNTER = vehicle=$UP_VNAME, obs=$ID, dist=$DIST
  near_miss_flag   = OB_NEAR_MISS = vehicle=$UP_VNAME, obs=$ID, dist=$DIST
  encounter_flag   = OB_COLLISION = vehicle=$UP_VNAME, obs=$ID, dist=$DIST

  // each encounter post total count
  collision_flag   = COLLISION_COUNT = $COLL_CNT
  near_miss_flag   = NEAR_MISS_COUNT = $MISS_CNT
  encounter_flag   = ENCOUNTER_COUNT = $ENC_CNT
}


//------------------------------------------
// uFldPathCheck config block

ProcessConfig = uFldPathCheck
{
  AppTick       = 2
  CommsTick     = 2
}


//------------------------------------------
// uEvalPlanner config block

ProcessConfig = uEvalPlanner
{
  AppTick       = 2
  CommsTick     = 2

  start_pos = $(START_POS)
  goal_pos = $(GOAL_POS)

  path_request_var = $(PATH_REQUEST_VAR)
  path_complete_var = $(PATH_COMPLETE_VAR)

  num_trials = $(NUM_TRIALS)

  obs_reset_vars = RESET_KNOWN_OBSTACLES:RESET_UNKNOWN_OBSTACLES
  endflag = DEPLOY_ALL=false
}
