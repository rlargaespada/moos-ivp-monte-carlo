//*******************************************************
// definitions
#define OBS_REFRESH_INTERVAL 100
#define OBS_MIN_DURATION 120
#define OBS_MAX_DURATION 180

//*******************************************************
// ShoreSide Configuration File

ServerHost = $(IP_ADDR)
ServerPort = $(SHORE_MOOSDB)
Community  = shoreside

#include plug_origin_warp.moos

//--------------------------------------------------------
Processconfig = ANTLER
{
  MSBetweenLaunches = 100

  Run = MOOSDB           @ NewConsole = false
  Run = pRealm           @ NewConsole = false
#ifdef GUI true
  Run = pMarineViewer    @ NewConsole = false
#endif

  // Run = pLogger          @ NewConsole = false
  // Run = uXMS             @ NewConsole = false
  // Run = pDeadManPost     @ NewConsole = false

  Run = pShare           @ NewConsole = false
  Run = pHostInfo        @ NewConsole = false
  Run = uFldShoreBroker  @ NewConsole = false

  Run = uFldObstacleSim  @ NewConsole = false ~ uFldObstacleSim_CONSTANT
  Run = uFldObstacleSim  @ NewConsole = false ~ uFldObstacleSim_KNOWN
  // Run = uFldObstacleSim  @ NewConsole = false ~ uFldObstacleSim_UNKNOWN

  Run = uFldCollObDetect @ NewConsole = false
  Run = uFldPathCheck    @ NewConsole = false
}


//------------------------------------------
// pMarineViewer config block

ProcessConfig = pMarineViewer
{
  AppTick = 4
  CommsTick = 4

  // BackView Options
  // tiff_file            = MIT_SP.tif
  tiff_file            = forrest19.tif
  set_pan_x            = -90
  set_pan_y            = -280
  zoom                 = 0.65
  vehicle_shape_scale  = 1.5

  // BackView Pull-Down Menu
  hash_delta           = 50
  hash_shade           = 0.22
  hash_viewable        = true

  // GeoAttributes Pull-Down Menu
  // use all defaults

  // Vehicles Pull-Down Menu
  // use all defaults

  // InfoCasting Pull-Down Menu
  appcast_height       = 75
  appcast_width        = 30
  appcast_viewable     = true
  appcast_color_scheme = indigo
  nodes_font_size      = xlarge
  procs_font_size      = xlarge
  appcast_font_size    = large

  // Context Pull-Down Menu
  // todo: add context to update start and goal positions

  // Exclusion Filter
  // leave empty

  // MOOS-Scope Pull-Down Menu
  // todo: choose which variables to scope on
  scope = PHI_HOST_INFO
  scope = WPT_STAT
  scope = VIEW_SEGLIST
  scope = VIEW_POINT
  scope = VIEW_POLYGON
  scope = MVIEWER_LCLICK
  scope = MVIEWER_RCLICK

  // Action Pull-Down Menu
  // todo: determine what actions might be useful

  // Button Configuration
  button_one = LAUNCH_SIM # DEPLOY_ALL=true # MOOS_MANUAL_OVERRIDE_ALL=false
  button_one = RESET_SIM_REQUESTED=true
  button_two = END_SIM # DEPLOY_ALL=false # END_SIM_REQUESTED=true

  button_three = PAUSE_SIM # USM_SIM_PAUSED_ALL=true
  button_four = UNPAUSE_SIM # USM_SIM_PAUSED_ALL=false

  button_five = RESET_TRIAL # RESET_TRIAL_REQUESTED=true
  button_six = RESET_SIM # RESET_SIM_REQUESTED=true
  button_seven = SKIP_TRIAL # SKIP_TRIAL_REQUESTED=true
  
}


// todo: determine which variables to log for pLogger
// todo: determine which variables to scope for uXMS
// todo: determine which variables to monitor for pDeadManPost


#include plug_pShare.moos
#include plug_pHostInfo.moos
//------------------------------------------
// uFldShoreBroker config block

ProcessConfig = uFldShoreBroker
{
  AppTick       = 4
  CommsTick     = 4

  // Note: [QBRIDGE = FOO]  is shorthand for
  //       [BRIDGE = src=FOO_$V,  alias=FOO] and
  //       [BRIDGE = src=FOO_ALL, alias=FOO]

  qbridge = DEPLOY
  qbridge = MOOS_MANUAL_OVERRIDE, APPCAST_REQ
  qbridge = USM_SIM_PAUSED, USM_RESET
  qbridge = TRACKED_FEATURE

  bridge   = src=GIVEN_OBSTACLE
  //todo: determine if any more variables need to be shared
}


ProcessConfig = uFldObstacleSim_CONSTANT
{
  AppTick       = 1
  CommsTick     = 1

  obstacle_file = $(OBS_CONST_FILE)
  post_visuals = $(GUI)

  // parameters to draw constant obstacles
  poly_vert_color = sandybrown
  poly_edge_color = sandybrown
  poly_fill_color = chocolate
  poly_label_color = invisible

  poly_vert_size = 1
  poly_edge_size = 1
  poly_transparency = 0.15

  // obstacle region is whole map, so no need to draw
  draw_region = false

  // vehicle knows about constant obstacles, so post polygons
  post_points = false

  // obstacle repost configuration
  min_duration = $(OBS_MIN_DURATION)
  max_duration = $(OBS_MAX_DURATION)
  refresh_interval = $(OBS_REFRESH_INTERVAL)

  // obstacle reset configuration
  // for constant obstacles, don't want obstacles to reset
  // obstacle region is entire map
  // vehicles will never exit obstacle region, so obstacles
  // will never reset
  reset_range = 1000  // add a buffer to map limits for safety
}


ProcessConfig = uFldObstacleSim_KNOWN
{
  AppTick       = 1
  CommsTick     = 1

  obstacle_file = $(OBS_KNOWN_FILE)
  post_visuals = $(GUI)

  // parameters to draw known obstacles
  poly_vert_color = royalblue
  poly_edge_color = royalblue
  poly_fill_color = cornflowerblue
  // poly_label_color = invisible
  poly_label_color = white

  poly_vert_size = 1
  poly_edge_size = 1
  poly_transparency = 0.15

  // parameters to draw obstacle region
  draw_region = true
  region_vert_color = hotpink
  region_edge_color = hotpink

  // vehicle knows about known obstacles, so post polygons
  post_points = false

  // obstacle repost configuration
  min_duration = $(OBS_MIN_DURATION)
  max_duration = $(OBS_MAX_DURATION)
  refresh_interval = $(OBS_REFRESH_INTERVAL)

  // obstacle reset configuration
  // don't allow timed resets
  // todo: disallow timed resets
  reset_interval = 20  //! temporary measure while testing, command should come from perf analyzer
  reset_range = 10
  reuse_ids = true
}


ProcessConfig = uFldObstacleSim_UNKNOWN
{
  AppTick       = 1
  CommsTick     = 1

  obstacle_file = $(OBS_UNKNOWN_FILE)
  post_visuals = $(GUI)

  // parameters to draw known obstacles
  poly_vert_color = orangered
  poly_edge_color = orangered
  poly_fill_color = coral
  // poly_label_color = invisible
  poly_label_color = white

  poly_vert_size = 1
  poly_edge_size = 1
  poly_transparency = 0.15

  // parameters to draw obstacle region
  draw_region = false
  region_vert_color = hotpink
  region_edge_color = hotpink

  // vehicle doesn't know about unknown obstacles, so post points
  post_points = true
  rate_points = 5
  point_size = 5

  // obstacle repost configuration
  min_duration = $(OBS_MIN_DURATION)
  max_duration = $(OBS_MAX_DURATION)
  refresh_interval = $(OBS_REFRESH_INTERVAL)

  // obstacle reset configuration
  // don't allow timed resets
  // todo: disallow timed resets
  reset_interval = 20  //! temporary measure while testing, command should come from perf analyzer
  reset_range = 10
  reuse_ids = true

  sensor_range = 50
}


//------------------------------------------
// uFldCollObDetect config block
ProcessConfig = uFldCollObDetect
{
  AppTick   = 4
  CommsTick = 4

  collision_dist   = 5
  near_miss_dist   = 10
  encounter_dist   = 20

  // post encounter info
  collision_flag   = OB_ENCOUNTER = vehicle=$UP_VNAME, obs=$ID, dist=$DIST
  near_miss_flag   = OB_NEAR_MISS = vehicle=$UP_VNAME, obs=$ID, dist=$DIST
  encounter_flag   = OB_COLLISION = vehicle=$UP_VNAME, obs=$ID, dist=$DIST

  // each encounter post total count
  collision_flag   = COLLISION_COUNT = $COLL_CNT
  near_miss_flag   = NEAR_MISS_COUNT = $MISS_CNT
  encounter_flag   = ENCOUNTER_COUNT = $ENC_CNT
}


//------------------------------------------
// uFldPathCheck config block

ProcessConfig = uFldPathCheck
{
  AppTick       = 2
  CommsTick     = 2
}
